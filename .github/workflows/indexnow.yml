name: IndexNow - Notify Bing (GitHub Pages + Blogger)

on:
  push:
    branches: [ main ]   # or your publishing branch

jobs:
  indexnow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build URL list (GitHub Pages changed .html files)
        env:
          DOMAIN: aymansalem.github.io
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            FILES=$(git ls-files)
          else
            FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} )
          fi
          echo "Changed files:"
          echo "$FILES"
          URLS=()
          for f in $FILES; do
            case "$f" in
              *.html|*.htm)
                URLS+=("https://${DOMAIN}/${f}")
                ;;
            esac
          done
          if [ ${#URLS[@]} -eq 0 ] && [ -f sitemap.xml ]; then
            python3 - <<'PY'
import xml.etree.ElementTree as ET
try:
    tree = ET.parse('sitemap.xml')
    ns = {'ns': 'http://www.sitemaps.org/schemas/sitemap/0.9'}
    urls = [u.find('ns:loc', ns).text for u in tree.findall('.//ns:url', ns)]
    with open('urls.txt', 'w') as out:
        for u in urls:
            out.write(u + '\n')
except Exception:
    open('urls.txt', 'w').close()
PY
          else
            printf "%s\n" "${URLS[@]}" > urls.txt
          fi

      - name: Append Blogger.com URLs from sitemap
        run: |
          BLOGGER_SITEMAP="https://4-hoteliers.blogspot.com/sitemap.xml"
          curl -s "$BLOGGER_SITEMAP" | \
          grep -oP '(?<=<loc>).*?(?=</loc>)' >> urls.txt
          echo "Final URL list:"
          cat urls.txt

      - name: Submit to IndexNow (Bing)
        env:
          INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY }}
        run: |
          if [ ! -s urls.txt ]; then
            echo "No urls to submit; exiting."
            exit 0
          fi
          python3 - <<'PY'
import os, json, urllib.request
from urllib.parse import urlparse
from collections import defaultdict

key = os.environ['INDEXNOW_KEY']
key_files = {
    'aymansalem.github.io': f'https://aymansalem.github.io/{key}.txt',
    '4-hoteliers.blogspot.com': None  # Blogger doesn't require keyLocation hosting
}

# Group URLs by host
urls_by_host = defaultdict(list)
with open('urls.txt') as f:
    for url in f:
        url = url.strip()
        if url:
            host = urlparse(url).netloc
            urls_by_host[host].append(url)

# Submit each host separately
for host, urls in urls_by_host.items():
    payload = {
        'host': host,
        'key': key,
        'urlList': urls
    }
    if key_files.get(host):
        payload['keyLocation'] = key_files[host]
    data = json.dumps(payload).encode('utf-8')
    req = urllib.request.Request(
        'https://www.bing.com/indexnow',
        data=data,
        headers={'Content-Type': 'application/json'}
    )
    resp = urllib.request.urlopen(req)
    print(f'Host: {host} -> Response:', resp.status, resp.read().decode('utf-8'))
PY
